WITH MissingIndexes AS (
    SELECT 
        OBJECT_NAME(mid.[object_id], mid.database_id) AS TableName,
        mid.equality_columns AS EqualityColumns,
        mid.inequality_columns AS InequalityColumns,
        mid.included_columns AS IncludedColumns,
        CAST((migs.user_seeks + migs.user_scans) * migs.avg_total_user_cost * migs.avg_user_impact AS DECIMAL(18,2)) AS ImprovementMeasure,
        'CREATE INDEX [IX_' + OBJECT_NAME(mid.[object_id], mid.database_id) + '_' + 
        REPLACE(REPLACE(ISNULL(mid.equality_columns, ''), ',', '_'), ' ', '') + 
        CASE WHEN mid.inequality_columns IS NOT NULL THEN '_' + REPLACE(REPLACE(mid.inequality_columns, ',', '_'), ' ', '') ELSE '' END +
        '] ON [' + OBJECT_NAME(mid.[object_id], mid.database_id) + '] (' +
        ISNULL(mid.equality_columns, '') +
        CASE WHEN mid.inequality_columns IS NOT NULL AND mid.equality_columns IS NOT NULL THEN ',' ELSE '' END +
        ISNULL(mid.inequality_columns, '') +
        ')' +
        CASE WHEN mid.included_columns IS NOT NULL THEN ' INCLUDE (' + mid.included_columns + ')' ELSE '' END AS CreateIndexStatement
    FROM 
        sys.dm_db_missing_index_group_stats AS migs
    INNER JOIN 
        sys.dm_db_missing_index_groups AS mig
        ON migs.group_handle = mig.index_group_handle
    INNER JOIN 
        sys.dm_db_missing_index_details AS mid
        ON mig.index_handle = mid.index_handle
    WHERE 
        mid.database_id = DB_ID()
)
SELECT 
    TableName,
    EqualityColumns,
    InequalityColumns,
    IncludedColumns,
    ImprovementMeasure,
    CreateIndexStatement
FROM 
    MissingIndexes
ORDER BY 
    ImprovementMeasure DESC;
